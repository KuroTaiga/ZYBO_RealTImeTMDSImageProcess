#include "xparameters.h"
#include "xstatus.h"
#include "ff.h"
#include "xil_printf.h"
#include <stdio.h>

char *strcpy_rom(char *Dest, const char *Src)
{
    unsigned i;
    for (i=0; Src[i] != '\0'; ++i)
        Dest[i] = Src[i];
    Dest[i] = '\0';
    return Dest;
}

u32 loadFileFromSD(char filename[], u32 *dst)
{
    FIL fil;        /* File object */
    FATFS fatfs;
    char buffer[32];
    char *boot_file = buffer;

    // Copy from InitSD
    FRESULT rc;
    TCHAR *path = "0:/"; /* Logical drive number is 0 */

    /* Register volume work area, initialize device */
    rc = f_mount(&fatfs, path, 0);
    xil_printf("SD: rc= %.8x\n\r", rc);

    if (rc != FR_OK) {
        return XST_FAILURE;
    }

    strcpy_rom(buffer, filename);
    boot_file = (char *)buffer;

    rc = f_open(&fil, boot_file, FA_READ);
    if (rc) {
        xil_printf("SD: Unable to open file %s: %d\n", boot_file, rc);
        return XST_FAILURE;
    }

    // Copy from SDAccess
    UINT br;

    rc = f_lseek(&fil, 0);
    if (rc) {
        xil_printf("SD: Unable to seek to %x\n", 0);
        return XST_FAILURE;
    }

    rc = f_read(&fil, (void*)dst, fil.fsize, &br);

    if (rc) {
        xil_printf("*** ERROR: f_read returned %d\r\n", rc);
        return XST_FAILURE;
    }

    Xil_DCacheInvalidateRange(dst, fil.fsize);

    return XST_SUCCESS;
}

int main(void)
{
    u32 Status;
	printf("Loading test.dat\r\n");
    Status = loadFileFromSD("test.dat", ((u32 *) 0x04000000));
    if ( Status != XST_SUCCESS ) {
        printf("Fail\r\n");
    }
    printf("loaded\r\n");

    return XST_SUCCESS;
}
