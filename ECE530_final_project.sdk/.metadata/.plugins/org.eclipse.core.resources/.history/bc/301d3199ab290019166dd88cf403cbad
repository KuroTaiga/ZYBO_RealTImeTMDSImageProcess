#include "LoadFile.h"

uint32_t loadFileFromSD(char filename[], uint32_t *dst)
{
    FIL fil;        /* File object */
    FATFS fatfs;
    char buffer[32];
    char *boot_file = buffer;

    // Copy from InitSD
    FRESULT rc;
    TCHAR *path = "0:/"; /* Logical drive number is 0 */

    /* Register volume work area, initialize device */
    //rc = f_mount(&fatfs, path, 0);
    rc = f_mount(&fatfs, path, 0);
    xil_printf("SD: rc= %.8x\n\r", rc);

    if (rc != FR_OK) {
        return XST_FAILURE;
    }

    strcpy_rom(buffer, filename);
    boot_file = (char *)buffer;

    rc = f_open(&fil, boot_file, FA_READ);
    if (rc) {
        xil_printf("SD: Unable to open file %s: %d\n", boot_file, rc);
        return XST_FAILURE;
    }

    // Copy from SDAccess
    UINT br;

    rc = f_lseek(&fil, 0);
    if (rc) {
        xil_printf("SD: Unable to seek to %x\n", 0);
        return XST_FAILURE;
    }

    rc = f_read(&fil, (void*)dst, fil.fsize, &br);

    if (rc) {
        xil_printf("*** ERROR: f_read returned %d\r\n", rc);
        return XST_FAILURE;
    }

    Xil_DCacheInvalidateRange(dst, fil.fsize);

    return XST_SUCCESS;
}
