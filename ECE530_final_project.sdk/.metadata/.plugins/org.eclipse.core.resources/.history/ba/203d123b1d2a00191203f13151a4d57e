#include <stdio.h>
#include "platform.h"
#include "xil_io.h"
#include "xil_printf.h"
#include "xparameters.h"
#include "ff.h"
#define ImgH 30
#define ImgW 25
#define IMG_SIZE ImgH*ImgW
#define MSB_MASK 1000000000000000000000000

u32 loadFileFromSD(char filename[], u32 *dst)
{
    FIL fil;        /* File object */
    FATFS fatfs;
    char buffer[32];
    char *boot_file = buffer;

    // Copy from InitSD
    FRESULT rc;
    TCHAR *path = "0:/"; /* Logical drive number is 0 */

    /* Register volume work area, initialize device */
    rc = f_mount(&fatfs, path, 0);
    xil_printf("SD: rc= %.8x\n\r", rc);

    if (rc != FR_OK) {
        return XST_FAILURE;
    }

    strcpy_rom(buffer, filename);
    boot_file = (char *)buffer;

    rc = f_open(&fil, boot_file, FA_READ);
    if (rc) {
        xil_printf("SD: Unable to open file %s: %d\n", boot_file, rc);
        return XST_FAILURE;
    }

    // Copy from SDAccess
    UINT br;

    rc = f_lseek(&fil, 0);
    if (rc) {
        xil_printf("SD: Unable to seek to %x\n", 0);
        return XST_FAILURE;
    }

    rc = f_read(&fil, (void*)dst, fil.fsize, &br);

    if (rc) {
        xil_printf("*** ERROR: f_read returned %d\r\n", rc);
        return XST_FAILURE;
    }

    Xil_DCacheInvalidateRange(dst, fil.fsize);

    return XST_SUCCESS;
}


void open_img(void) {
    FILE    *fp;
    char    buf[32768]; //Maximum 32K
    int    i, size;
    uint32_t mask=0;
//    fp = fopen("img/yoshi.png", "rb");
    fp = fopen("/mnt/yoshi.png", "rb");
    if(fp != NULL) {
        while(size = fread( buf, sizeof(unsigned char), 32768, fp )) {
            //for(i = 0 ; i < size ; i++) {
            //    printf("%c", buf[i]);
            for(i =0; i<size; i++) {
              if(0==buf[i]) mask = 0;
              else mask = MSB_MASK;
              Xil_Out32(XPAR_BRAM_0_BASEADDR + 4*i, (mask|buf[i])); //33554431=0x1FFFFFF;
            }
        }
        fclose(fp);
    } else print("Failed to file open\n");
}

int main()
{
    init_platform();

    xil_printf("Hello World\n\r");
    //printf("Content-type: image/jpeg\n\n");
    print("Content-type: yoshi.png\n\n");
    open_img();

//  for(int i =0; i<IMG_SIZE; i++)
//    Xil_Out32(XPAR_BRAM_0_BASEADDR + 4*i, 33554431); //33554431=0x1FFFFFF;
//    Xil_Out32(XPAR_BRAM_0_BASEADDR + 4, 345);
//    uint32_t result = 0;
//    result = Xil_In32(XPAR_BRAM_0_BASEADDR + 0);
//    xil_printf("BRAM[0] = %d\r\n", result);
//    result = Xil_In32(XPAR_BRAM_0_BASEADDR + 4);
//    xil_printf("BRAM[799] = %d\r\n", result);
//    result = Xil_In32(XPAR_BRAM_0_BASEADDR + 799*4);

    cleanup_platform();
    return 0;
}
